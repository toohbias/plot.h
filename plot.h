#ifndef PLOT_H
#define PLOT_H

#include <stdint.h>
#include <stdio.h>
#include <string.h>
#include <math.h>

#define WIDTH 512   // set Plot resolution here
#define HEIGHT 400  // 

#define TOPSPACING 32
#define BOTTOMSPACING 64
#define LEFTSPACING 80 
#define RIGHTSPACING 24

#define IMGWIDTH (WIDTH + LEFTSPACING + RIGHTSPACING)
#define IMGHEIGHT (HEIGHT + TOPSPACING + BOTTOMSPACING)

typedef struct {
    double x_min;
    double x_max;
    double y_min;
    double y_max;
    uint8_t canvas[IMGHEIGHT][IMGWIDTH / 8];
    char *file_name;
} Plot;

int getYPixel(Plot *p, double y_value) {
    if (y_value < p->y_min ||
        y_value > p->y_max ||
        isinf(y_value) ||
        isnan(y_value)
    ) { return -1; }
    return ((y_value - p->y_max) / (p->y_min - p->y_max)) * HEIGHT + TOPSPACING;
}

int getXChar(Plot *p, double x_value) {
    if (x_value < p->x_min ||
        x_value > p->x_max ||
        isinf(x_value) ||
        isnan(x_value)
    ) { return -1; }
    return ((x_value - p->x_min) / (p->x_max - p->x_min)) * WIDTH + LEFTSPACING;
}

void hText(Plot *p, char *text, int x_p, int pos, int y_p);
void vText(Plot *p, char *text, int x_p, int pos, int y_p);
void setYTicks(Plot *p, double *y_ticks, int size, double scale);
void setXTicks(Plot *p, double *x_ticks, int size, double scale);

Plot initPlot(
    double x_min, 
    double x_max, 
    double y_min, 
    double y_max, 
    char *x_label, 
    char *y_label, 
    char *title, 
    char *file_name
) {
    Plot p = {
        .x_min = x_min,
        .x_max = x_max,
        .y_min = y_min,
        .y_max = y_max,
        .canvas = {0},
        .file_name = file_name
    };

    double y_scale = 1;
    double y_range = (y_max - y_min);
    while(y_range < 2.0) {
        y_scale *= 1E3;
        y_range *= 1E3;
    }
    while(y_range >= 2000.0) {
        y_scale *= 1E-3;
        y_range *= 1E-3;
    }
    double y_ticks[5];
    double y_step = (y_max - y_min) / 4;
    for(int i = 0; i < 5; i++) {
        y_ticks[i] = y_min + i * y_step;
    }

    double x_scale = 1;
    double x_range = (x_max - x_min);
    while(x_range < 2.0) {
        x_scale *= 1E3;
        x_range *= 1E3;
    }
    while(x_range >= 2000.0) {
        x_scale *= 1E-3;
        x_range *= 1E-3;
    }
    double x_ticks[5];
    double x_step = (x_max - x_min) / 4;
    for(int i = 0; i < 5; i++) {
        x_ticks[i] = x_min + i * x_step;
    }

    if(y_label != NULL) {
        if(strlen(y_label) > HEIGHT / 8) {
            y_label[(int)(HEIGHT / 8)] = '\0';
        }
        vText(&p, y_label, 1, 0, TOPSPACING);
    }

    if(x_label != NULL) {
        if(strlen(x_label) > WIDTH / 8) {
            x_label[(int)(WIDTH / 8)] = '\0';
        }
        hText(&p, x_label, (IMGWIDTH - RIGHTSPACING - (strlen(x_label) * 8)) / 8, 0, IMGHEIGHT - 8 - 16);
    }

    if(title != NULL) {
        if(strlen(title) > WIDTH / 8) {
            title[(int)(WIDTH / 8)] = '\0';
        }
        hText(&p, title, LEFTSPACING / 8, 0, 8);
    }

    setYTicks(&p, y_ticks, 5, y_scale);
    setXTicks(&p, x_ticks, 5, x_scale);
    
    return p;
}

void setYTicks(Plot *p, double *y_ticks, int size, double scale) {
    if(!y_ticks) { return; }
    for(int i = 0; i < size; i++) {
        int y = ((*(y_ticks + i) - p->y_max) / (p->y_min - p->y_max)) * HEIGHT + TOPSPACING;
        int x = (LEFTSPACING / 8) - 1;
        p->canvas[y][x] = 0b00111111;

        char buffer[6];
        int ret = snprintf(buffer, 6, "%g", *(y_ticks + i) * scale);
        if(ret >= sizeof(buffer)) { buffer[0] = '0'; buffer[1] = '\0';}
        hText(p, buffer, x - strlen(buffer), 0, y - 8);

        for(int w = 1; w <= WIDTH / 8; w++) {
            p->canvas[y][x + w] |= 0b10101010;
        }
    }
}

void setXTicks(Plot *p, double *x_ticks, int size, double scale) {
    if(!x_ticks) { return; }
    for(int i = 0; i < size; i++) {
        int y_p = IMGHEIGHT - BOTTOMSPACING + 1;
        int x_char = ((*(x_ticks + i) - p->x_min) / (p->x_max - p->x_min)) * WIDTH + LEFTSPACING;
        int x_p = x_char / 8;
        int pos = 7 - x_char % 8;
        uint8_t flag = 1 << pos;
        for(int j = 0; j < 6; j++) {
            p->canvas[y_p + j][x_p] |= flag;
        }

        char buffer[6];
        int ret = snprintf(buffer, 6, "%g", *(x_ticks + i) * scale);
        if(ret >= sizeof(buffer)) { buffer[0] = '0'; buffer[1] = '\0';}
        int offset = strlen(buffer) / 2;
        offset += (pos + 1) / 8;
        pos = (pos + 1) % 8;
        if(strlen(buffer) % 2 != 0) {
            offset += (pos + 4) / 8;
            pos = (pos + 4) % 8;
        }
        hText(p, buffer, x_p - offset, pos, y_p + 8);

        for(int h = 1; h <= HEIGHT + 1; h+=2) {
            p->canvas[y_p - h][x_p] |= flag;
        }
    }
}

void setPoint(double x, double y, Plot *p) {
    int y_p = getYPixel(p, y);
    int x_char = getXChar(p, x);
    if(y_p == -1 || x_char == -1) { return; }
    int x_p = x_char / 8;
    int pos = 7 - x_char % 8;
    uint8_t flag = 1 << pos;
    p->canvas[y_p][x_p] |= flag;
}

void savePlot(Plot *p) {
    FILE *file;
    file = fopen(p->file_name, "w");
    fprintf(file, "P4\n%d %d\n", IMGWIDTH, IMGHEIGHT);
    for(int h = 0; h < IMGHEIGHT; h++) {
        for(int w = 0; w < IMGWIDTH / 8; w++) {
            fprintf(file, "%c", p->canvas[h][w]);
        }
    }
    fclose(file);
}

const uint8_t hfont[95][16] = {
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // ' '
    { 0x00, 0x0C, 0x3E, 0x3E, 0x3E, 0x3E, 0x0C, 0x0C, 0x0C, 0x00, 0x00, 0x0C, 0x0C, 0x00, 0x00, 0x00 }, // '!'
    { 0x00, 0x00, 0x00, 0x76, 0x76, 0x32, 0x32, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // '"'
    { 0x00, 0x00, 0x00, 0x3B, 0x3B, 0x7F, 0x3B, 0x3B, 0x3B, 0x3B, 0x7F, 0x3B, 0x3B, 0x3B, 0x00, 0x00 }, // '#'
    { 0x00, 0x0C, 0x0C, 0x3E, 0x3E, 0x73, 0x73, 0x70, 0x3E, 0x03, 0x03, 0x73, 0x73, 0x3E, 0x0C, 0x0C }, // '$'
    { 0x00, 0x00, 0x00, 0x38, 0x44, 0x45, 0x3A, 0x0A, 0x04, 0x0B, 0x34, 0x24, 0x44, 0x03, 0x00, 0x00 }, // '%'
    { 0x00, 0x00, 0x00, 0x0E, 0x3B, 0x3B, 0x0E, 0x0E, 0x3C, 0x77, 0x73, 0x73, 0x73, 0x3D, 0x00, 0x00 }, // '&'
    { 0x00, 0x00, 0x00, 0x70, 0x70, 0x30, 0x30, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // '''
    { 0x00, 0x00, 0x00, 0x03, 0x06, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x06, 0x03, 0x00, 0x00 }, // '('
    { 0x00, 0x00, 0x00, 0x70, 0x38, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x38, 0x70, 0x00, 0x00 }, // ')'
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x73, 0x3E, 0x3E, 0xFF, 0x3E, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00 }, // '*'
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x0C, 0x0C, 0x7F, 0x0C, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00 }, // '+'
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x70, 0x30, 0x40, 0x00 }, // ','
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // '-'
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x70, 0x00, 0x00, 0x00 }, // '.'
    { 0x00, 0x00, 0x00, 0x03, 0x03, 0x06, 0x06, 0x06, 0x0C, 0x0C, 0x38, 0x38, 0x38, 0x70, 0x70, 0x00 }, // '/'
    { 0x00, 0x00, 0x00, 0x3E, 0x73, 0x77, 0x77, 0x77, 0x7F, 0x7B, 0x7B, 0x7B, 0x73, 0x3E, 0x00, 0x00 }, // '0'
    { 0x00, 0x00, 0x00, 0x0C, 0x7C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x7F, 0x00, 0x00 }, // '1'
    { 0x00, 0x00, 0x00, 0x3E, 0x73, 0x73, 0x03, 0x03, 0x06, 0x0C, 0x38, 0x30, 0x70, 0x7F, 0x00, 0x00 }, // '2'
    { 0x00, 0x00, 0x00, 0x3E, 0x73, 0x73, 0x03, 0x03, 0x0E, 0x03, 0x03, 0x73, 0x73, 0x3E, 0x00, 0x00 }, // '3'
    { 0x00, 0x00, 0x00, 0x03, 0x07, 0x0F, 0x3B, 0x73, 0x73, 0x73, 0x7F, 0x03, 0x03, 0x03, 0x00, 0x00 }, // '4'
    { 0x00, 0x00, 0x00, 0x7F, 0x70, 0x70, 0x70, 0x70, 0x7E, 0x03, 0x03, 0x73, 0x73, 0x3E, 0x00, 0x00 }, // '5'
    { 0x00, 0x00, 0x00, 0x0F, 0x38, 0x70, 0x70, 0x70, 0x7E, 0x73, 0x73, 0x73, 0x73, 0x3E, 0x00, 0x00 }, // '6'
    { 0x00, 0x00, 0x00, 0x7F, 0x03, 0x03, 0x03, 0x06, 0x06, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x00, 0x00 }, // '7'
    { 0x00, 0x00, 0x00, 0x3E, 0x73, 0x73, 0x73, 0x73, 0x3E, 0x73, 0x73, 0x73, 0x73, 0x3E, 0x00, 0x00 }, // '8'
    { 0x00, 0x00, 0x00, 0x3E, 0x73, 0x73, 0x73, 0x73, 0x3F, 0x03, 0x03, 0x03, 0x06, 0x3C, 0x00, 0x00 }, // '9'
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x0C, 0x00, 0x00 }, // ':'
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x0C, 0x04, 0x08 }, // ';'
    { 0x00, 0x00, 0x00, 0x02, 0x06, 0x0C, 0x38, 0x30, 0x70, 0x38, 0x38, 0x04, 0x06, 0x02, 0x00, 0x00 }, // '<'
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // '='
    { 0x00, 0x00, 0x00, 0x30, 0x38, 0x0C, 0x06, 0x02, 0x03, 0x06, 0x06, 0x08, 0x38, 0x30, 0x00, 0x00 }, // '>'
    { 0x00, 0x00, 0x00, 0x3E, 0x73, 0x73, 0x03, 0x03, 0x06, 0x0C, 0x00, 0x00, 0x0C, 0x0C, 0x00, 0x00 }, // '?'
    { 0x00, 0x00, 0x00, 0x3E, 0x73, 0x73, 0x73, 0x77, 0x77, 0x77, 0x70, 0x70, 0x70, 0x3F, 0x00, 0x00 }, // '@'
    { 0x00, 0x00, 0x00, 0x3E, 0x73, 0x73, 0x73, 0x73, 0x73, 0x7F, 0x73, 0x73, 0x73, 0x73, 0x00, 0x00 }, // 'A'
    { 0x00, 0x00, 0x00, 0x7E, 0x73, 0x73, 0x73, 0x73, 0x7E, 0x73, 0x73, 0x73, 0x73, 0x7E, 0x00, 0x00 }, // 'B'
    { 0x00, 0x00, 0x00, 0x3E, 0x73, 0x73, 0x70, 0x70, 0x70, 0x70, 0x70, 0x73, 0x73, 0x3E, 0x00, 0x00 }, // 'C'
    { 0x00, 0x00, 0x00, 0x7E, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x7E, 0x00, 0x00 }, // 'D'
    { 0x00, 0x00, 0x00, 0x7F, 0x70, 0x70, 0x70, 0x70, 0x7E, 0x70, 0x70, 0x70, 0x70, 0x7F, 0x00, 0x00 }, // 'E'
    { 0x00, 0x00, 0x00, 0x7F, 0x70, 0x70, 0x70, 0x70, 0x7E, 0x70, 0x70, 0x70, 0x70, 0x70, 0x00, 0x00 }, // 'F'
    { 0x00, 0x00, 0x00, 0x3E, 0x73, 0x73, 0x70, 0x70, 0x77, 0x73, 0x73, 0x73, 0x73, 0x3E, 0x00, 0x00 }, // 'G'
    { 0x00, 0x00, 0x00, 0x73, 0x73, 0x73, 0x73, 0x73, 0x7F, 0x73, 0x73, 0x73, 0x73, 0x73, 0x00, 0x00 }, // 'H'
    { 0x00, 0x00, 0x00, 0x7F, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x7F, 0x00, 0x00 }, // 'I'
    { 0x00, 0x00, 0x00, 0x0F, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x73, 0x73, 0x3E, 0x00, 0x00 }, // 'J'
    { 0x00, 0x00, 0x00, 0x73, 0x73, 0x76, 0x76, 0x76, 0x7C, 0x76, 0x76, 0x76, 0x73, 0x73, 0x00, 0x00 }, // 'K'
    { 0x00, 0x00, 0x00, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x7F, 0x00, 0x00 }, // 'L'
    { 0x00, 0x00, 0x00, 0x40, 0x71, 0x7B, 0x7F, 0x75, 0x71, 0x71, 0x71, 0x71, 0x71, 0x71, 0x00, 0x00 }, // 'M'
    { 0x00, 0x00, 0x00, 0x73, 0x73, 0x73, 0x7B, 0x7B, 0x77, 0x77, 0x73, 0x73, 0x73, 0x73, 0x00, 0x00 }, // 'N'
    { 0x00, 0x00, 0x00, 0x3E, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x3E, 0x00, 0x00 }, // 'O'
    { 0x00, 0x00, 0x00, 0x7E, 0x73, 0x73, 0x73, 0x73, 0x7E, 0x70, 0x70, 0x70, 0x70, 0x70, 0x00, 0x00 }, // 'P'
    { 0x00, 0x00, 0x00, 0x3E, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x3E, 0x0C, 0x07 }, // 'Q'
    { 0x00, 0x00, 0x00, 0x7E, 0x73, 0x73, 0x73, 0x73, 0x7E, 0x73, 0x73, 0x73, 0x73, 0x73, 0x00, 0x00 }, // 'R'
    { 0x00, 0x00, 0x00, 0x3E, 0x73, 0x73, 0x70, 0x70, 0x3E, 0x03, 0x03, 0x73, 0x73, 0x3E, 0x00, 0x00 }, // 'S'
    { 0x00, 0x00, 0x00, 0x7F, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x00, 0x00 }, // 'T'
    { 0x00, 0x00, 0x00, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x3E, 0x00, 0x00 }, // 'U'
    { 0x00, 0x00, 0x00, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x3E, 0x3E, 0x3E, 0x0C, 0x0C, 0x00, 0x00 }, // 'V'
    { 0x00, 0x00, 0x00, 0x71, 0x71, 0x75, 0x75, 0x75, 0x75, 0x75, 0x75, 0x75, 0x3B, 0x3B, 0x00, 0x00 }, // 'W'
    { 0x00, 0x00, 0x00, 0x73, 0x73, 0x3E, 0x3E, 0x3E, 0x0C, 0x3E, 0x3E, 0x3E, 0x73, 0x73, 0x00, 0x00 }, // 'X'
    { 0x00, 0x00, 0x00, 0x73, 0x73, 0x73, 0x73, 0x73, 0x3E, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x00, 0x00 }, // 'Y'
    { 0x00, 0x00, 0x00, 0x7F, 0x03, 0x03, 0x03, 0x06, 0x0C, 0x38, 0x70, 0x70, 0x70, 0x7F, 0x00, 0x00 }, // 'Z'
    { 0x00, 0x00, 0x00, 0x0F, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0F, 0x00, 0x00 }, // '['
    { 0x00, 0x00, 0x00, 0x38, 0x38, 0x38, 0x38, 0x0C, 0x0C, 0x0C, 0x06, 0x06, 0x06, 0x06, 0x00, 0x00 }, // '\'
    { 0x00, 0x00, 0x00, 0x7C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x7C, 0x00, 0x00 }, // ']'
    { 0x00, 0x00, 0x00, 0x0C, 0x3E, 0x73, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // '^'
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F }, // '_'
    { 0x00, 0x00, 0x00, 0x70, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // '`'
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x73, 0x03, 0x03, 0x3F, 0x73, 0x73, 0x33, 0x3F, 0x00, 0x00 }, // 'a'
    { 0x00, 0x00, 0x00, 0x70, 0x70, 0x7E, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x7E, 0x00, 0x00 }, // 'b'
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x72, 0x73, 0x73, 0x70, 0x73, 0x73, 0x32, 0x3E, 0x00, 0x00 }, // 'c'
    { 0x00, 0x00, 0x00, 0x03, 0x03, 0x3F, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x3F, 0x00, 0x00 }, // 'd'
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x73, 0x73, 0x73, 0x7F, 0x70, 0x70, 0x73, 0x3E, 0x00, 0x00 }, // 'e'
    { 0x00, 0x00, 0x00, 0x07, 0x0C, 0x0C, 0x0C, 0x7F, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x00, 0x00 }, // 'f'
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x3F, 0x03, 0x73 }, // 'g'
    { 0x00, 0x00, 0x00, 0x70, 0x70, 0x7E, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x00, 0x00 }, // 'h'
    { 0x00, 0x0C, 0x0C, 0x00, 0x7C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x7F, 0x00, 0x00, 0x00 }, // 'i'
    { 0x00, 0x03, 0x03, 0x00, 0x0F, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x73, 0x32 }, // 'j'
    { 0x00, 0x00, 0x00, 0x70, 0x70, 0x73, 0x73, 0x76, 0x76, 0x7C, 0x76, 0x76, 0x73, 0x73, 0x00, 0x00 }, // 'k'
    { 0x00, 0x00, 0x00, 0x7C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x7F, 0x00, 0x00 }, // 'l'
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x7B, 0x7F, 0x75, 0x75, 0x75, 0x75, 0x75, 0x75, 0x71, 0x00, 0x00 }, // 'm'
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x00, 0x00 }, // 'n'
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x3E, 0x00, 0x00 }, // 'o'
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x7E, 0x70, 0x70 }, // 'p'
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x3F, 0x03, 0x03 }, // 'q'
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x73, 0x73, 0x70, 0x70, 0x70, 0x70, 0x70, 0x70, 0x00, 0x00 }, // 'r'
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x33, 0x70, 0x70, 0x3E, 0x03, 0x03, 0x72, 0x3E, 0x00, 0x00 }, // 's'
    { 0x00, 0x00, 0x00, 0x0C, 0x0C, 0x7F, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x07, 0x00, 0x00 }, // 't'
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x3F, 0x00, 0x00 }, // 'u'
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x73, 0x73, 0x73, 0x73, 0x3E, 0x3E, 0x0C, 0x0C, 0x0C, 0x00, 0x00 }, // 'v'
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x71, 0x75, 0x75, 0x75, 0x75, 0x75, 0x75, 0x3B, 0x3B, 0x00, 0x00 }, // 'w'
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x73, 0x73, 0x3E, 0x3E, 0x0C, 0x3E, 0x3E, 0x73, 0x73, 0x00, 0x00 }, // 'x'
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x73, 0x3F, 0x03, 0x73 }, // 'y'
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x03, 0x02, 0x06, 0x0C, 0x38, 0x30, 0x70, 0x7F, 0x00, 0x00 }, // 'z'
    { 0x00, 0x00, 0x00, 0x07, 0x0C, 0x0C, 0x0C, 0x0C, 0x38, 0x0C, 0x0C, 0x0C, 0x0C, 0x07, 0x00, 0x00 }, // '{'
    { 0x00, 0x00, 0x00, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x00, 0x00 }, // '|'
    { 0x00, 0x00, 0x00, 0x78, 0x0C, 0x0C, 0x0C, 0x0C, 0x06, 0x0C, 0x0C, 0x0C, 0x0C, 0x78, 0x00, 0x00 }, // '}'
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3D, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // '~'
};

const uint8_t vfont[95][8][2] = {
    { {0x00, 0x00}, {0x00, 0x00}, {0x00, 0x00}, {0x00, 0x00}, {0x00, 0x00}, {0x00, 0x00}, {0x00, 0x00}, {0x00, 0x00}, }, // ' '
    { {0x00, 0x00}, {0x3C, 0x00}, {0x7F, 0x98}, {0x7F, 0x98}, {0x3C, 0x00}, {0x3C, 0x00}, {0x00, 0x00}, {0x00, 0x00}, }, // '!'
    { {0x00, 0x00}, {0x1E, 0x00}, {0x19, 0x00}, {0x00, 0x00}, {0x1E, 0x00}, {0x1E, 0x00}, {0x19, 0x00}, {0x00, 0x00}, }, // '"'
    { {0x1F, 0xFC}, {0x1F, 0xFC}, {0x04, 0x20}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x04, 0x20}, {0x00, 0x00}, }, // '#'
    { {0x06, 0x78}, {0x1E, 0xFC}, {0x78, 0x87}, {0x78, 0x87}, {0x1F, 0x9C}, {0x1F, 0x9C}, {0x07, 0x18}, {0x00, 0x00}, }, // '$'
    { {0x04, 0x44}, {0x03, 0x44}, {0x0C, 0xB8}, {0x13, 0x40}, {0x12, 0x20}, {0x12, 0x30}, {0x0C, 0x08}, {0x00, 0x00}, }, // '%'
    { {0x0C, 0x7C}, {0x1F, 0x78}, {0x13, 0xC4}, {0x1F, 0x84}, {0x0C, 0xFC}, {0x0C, 0xFC}, {0x00, 0x78}, {0x00, 0x00}, }, // '&'
    { {0x00, 0x00}, {0x00, 0x00}, {0x00, 0x00}, {0x00, 0x00}, {0x1E, 0x00}, {0x1E, 0x00}, {0x19, 0x00}, {0x00, 0x00}, }, // '''
    { {0x10, 0x04}, {0x18, 0x0C}, {0x0F, 0xF8}, {0x07, 0xF0}, {0x00, 0x00}, {0x00, 0x00}, {0x00, 0x00}, {0x00, 0x00}, }, // '('
    { {0x00, 0x00}, {0x00, 0x00}, {0x07, 0xF0}, {0x0F, 0xF8}, {0x18, 0x0C}, {0x18, 0x0C}, {0x10, 0x04}, {0x00, 0x00}, }, // ')'
    { {0x04, 0xA0}, {0x07, 0xE0}, {0x03, 0xC0}, {0x03, 0xC0}, {0x07, 0xE0}, {0x07, 0xE0}, {0x04, 0xA0}, {0x00, 0x80}, }, // '*'
    { {0x00, 0x80}, {0x00, 0x80}, {0x07, 0xE0}, {0x07, 0xE0}, {0x00, 0x80}, {0x00, 0x80}, {0x00, 0x80}, {0x00, 0x00}, }, // '+'
    { {0x00, 0x00}, {0x00, 0x00}, {0x00, 0x00}, {0x00, 0x00}, {0x00, 0x1C}, {0x00, 0x1C}, {0x00, 0x1A}, {0x00, 0x00}, }, // ','
    { {0x00, 0x00}, {0x00, 0x80}, {0x00, 0x80}, {0x00, 0x80}, {0x00, 0x80}, {0x00, 0x80}, {0x00, 0x00}, {0x00, 0x00}, }, // '-'
    { {0x00, 0x00}, {0x00, 0x00}, {0x00, 0x00}, {0x00, 0x00}, {0x00, 0x18}, {0x00, 0x18}, {0x00, 0x18}, {0x00, 0x00}, }, // '.'
    { {0x18, 0x00}, {0x1F, 0x00}, {0x07, 0xC0}, {0x00, 0xF8}, {0x00, 0x3E}, {0x00, 0x3E}, {0x00, 0x06}, {0x00, 0x00}, }, // '/'
    { {0x0F, 0xF8}, {0x1F, 0xFC}, {0x17, 0x84}, {0x10, 0xF4}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x0F, 0xF8}, {0x00, 0x00}, }, // '0'
    { {0x00, 0x04}, {0x00, 0x04}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x08, 0x04}, {0x08, 0x04}, {0x08, 0x04}, {0x00, 0x00}, }, // '1'
    { {0x0F, 0x04}, {0x1F, 0x84}, {0x10, 0xC4}, {0x10, 0x64}, {0x1C, 0x3C}, {0x1C, 0x3C}, {0x0C, 0x0C}, {0x00, 0x00}, }, // '2'
    { {0x0F, 0x78}, {0x1F, 0xFC}, {0x10, 0x84}, {0x10, 0x84}, {0x1C, 0x1C}, {0x1C, 0x1C}, {0x0C, 0x18}, {0x00, 0x00}, }, // '3'
    { {0x1F, 0xFC}, {0x1F, 0xFC}, {0x0C, 0x20}, {0x06, 0x20}, {0x03, 0xE0}, {0x03, 0xE0}, {0x01, 0xE0}, {0x00, 0x00}, }, // '4'
    { {0x10, 0x78}, {0x10, 0xFC}, {0x10, 0x84}, {0x10, 0x84}, {0x1F, 0x9C}, {0x1F, 0x9C}, {0x1F, 0x98}, {0x00, 0x00}, }, // '5'
    { {0x10, 0x78}, {0x10, 0xFC}, {0x10, 0x84}, {0x18, 0x84}, {0x0F, 0xFC}, {0x0F, 0xFC}, {0x07, 0xF8}, {0x00, 0x00}, }, // '6'
    { {0x1E, 0x00}, {0x1F, 0x80}, {0x11, 0xFC}, {0x10, 0x7C}, {0x10, 0x00}, {0x10, 0x00}, {0x10, 0x00}, {0x00, 0x00}, }, // '7'
    { {0x0F, 0x78}, {0x1F, 0xFC}, {0x10, 0x84}, {0x10, 0x84}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x0F, 0x78}, {0x00, 0x00}, }, // '8'
    { {0x0F, 0xF0}, {0x1F, 0xF8}, {0x10, 0x8C}, {0x10, 0x84}, {0x1F, 0x84}, {0x1F, 0x84}, {0x0F, 0x00}, {0x00, 0x00}, }, // '9'
    { {0x00, 0x00}, {0x00, 0x00}, {0x06, 0x0C}, {0x06, 0x0C}, {0x00, 0x00}, {0x00, 0x00}, {0x00, 0x00}, {0x00, 0x00}, }, // ':'
    { {0x00, 0x00}, {0x00, 0x00}, {0x06, 0x0E}, {0x06, 0x0D}, {0x00, 0x00}, {0x00, 0x00}, {0x00, 0x00}, {0x00, 0x00}, }, // ';'
    { {0x00, 0x00}, {0x18, 0x0C}, {0x0C, 0x18}, {0x06, 0x60}, {0x03, 0xE0}, {0x03, 0xE0}, {0x00, 0x80}, {0x00, 0x00}, }, // '<'
    { {0x02, 0x80}, {0x02, 0x80}, {0x02, 0x80}, {0x02, 0x80}, {0x02, 0x80}, {0x02, 0x80}, {0x02, 0x80}, {0x00, 0x00}, }, // '='
    { {0x00, 0x80}, {0x03, 0xE0}, {0x06, 0x60}, {0x0C, 0x18}, {0x18, 0x0C}, {0x18, 0x0C}, {0x00, 0x00}, {0x00, 0x00}, }, // '>'
    { {0x0F, 0x00}, {0x1F, 0x80}, {0x10, 0xCC}, {0x10, 0x4C}, {0x1C, 0x00}, {0x1C, 0x00}, {0x0C, 0x00}, {0x00, 0x00}, }, // '?'
    { {0x0F, 0xC4}, {0x1F, 0xC4}, {0x11, 0xC4}, {0x10, 0x04}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x0F, 0xF8}, {0x00, 0x00}, }, // '@'
    { {0x0F, 0xFC}, {0x1F, 0xFC}, {0x10, 0x40}, {0x10, 0x40}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x0F, 0xFC}, {0x00, 0x00}, }, // 'A'
    { {0x0F, 0x78}, {0x1F, 0xFC}, {0x10, 0x84}, {0x10, 0x84}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x00, 0x00}, }, // 'B'
    { {0x0C, 0x18}, {0x1C, 0x1C}, {0x10, 0x04}, {0x10, 0x04}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x0F, 0xF8}, {0x00, 0x00}, }, // 'C'
    { {0x0F, 0xF8}, {0x1F, 0xFC}, {0x10, 0x04}, {0x10, 0x04}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x00, 0x00}, }, // 'D'
    { {0x10, 0x04}, {0x10, 0x84}, {0x10, 0x84}, {0x10, 0x84}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x00, 0x00}, }, // 'E'
    { {0x10, 0x00}, {0x10, 0x80}, {0x10, 0x80}, {0x10, 0x80}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x00, 0x00}, }, // 'F'
    { {0x0C, 0xF8}, {0x1C, 0xFC}, {0x10, 0x84}, {0x10, 0x04}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x0F, 0xF8}, {0x00, 0x00}, }, // 'G'
    { {0x1F, 0xFC}, {0x1F, 0xFC}, {0x00, 0x80}, {0x00, 0x80}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x00, 0x00}, }, // 'H'
    { {0x10, 0x04}, {0x10, 0x04}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x10, 0x04}, {0x10, 0x04}, {0x10, 0x04}, {0x00, 0x00}, }, // 'I'
    { {0x1F, 0xF8}, {0x1F, 0xFC}, {0x10, 0x04}, {0x10, 0x04}, {0x00, 0x1C}, {0x00, 0x1C}, {0x00, 0x18}, {0x00, 0x00}, }, // 'J'
    { {0x18, 0x0C}, {0x1F, 0x7C}, {0x07, 0xF0}, {0x00, 0x80}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x00, 0x00}, }, // 'K'
    { {0x00, 0x04}, {0x00, 0x04}, {0x00, 0x04}, {0x00, 0x04}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x00, 0x00}, }, // 'L'
    { {0x0F, 0xFC}, {0x06, 0x00}, {0x03, 0x00}, {0x06, 0x00}, {0x0F, 0xFC}, {0x0F, 0xFC}, {0x1F, 0xFC}, {0x00, 0x00}, }, // 'M'
    { {0x1F, 0xFC}, {0x1F, 0xFC}, {0x00, 0xC0}, {0x03, 0x00}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x00, 0x00}, }, // 'N'
    { {0x0F, 0xF8}, {0x1F, 0xFC}, {0x10, 0x04}, {0x10, 0x04}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x0F, 0xF8}, {0x00, 0x00}, }, // 'O'
    { {0x0F, 0x00}, {0x1F, 0x80}, {0x10, 0x80}, {0x10, 0x80}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x00, 0x00}, }, // 'P'
    { {0x0F, 0xF9}, {0x1F, 0xFD}, {0x10, 0x07}, {0x10, 0x06}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x0F, 0xF8}, {0x00, 0x00}, }, // 'Q'
    { {0x0F, 0x7C}, {0x1F, 0xFC}, {0x10, 0x80}, {0x10, 0x80}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x00, 0x00}, }, // 'R'
    { {0x0C, 0x78}, {0x1C, 0xFC}, {0x10, 0x84}, {0x10, 0x84}, {0x1F, 0x9C}, {0x1F, 0x9C}, {0x0F, 0x18}, {0x00, 0x00}, }, // 'S'
    { {0x10, 0x00}, {0x10, 0x00}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x10, 0x00}, {0x10, 0x00}, {0x10, 0x00}, {0x00, 0x00}, }, // 'T'
    { {0x1F, 0xF8}, {0x1F, 0xFC}, {0x00, 0x04}, {0x00, 0x04}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x1F, 0xF8}, {0x00, 0x00}, }, // 'U'
    { {0x1F, 0x80}, {0x1F, 0xF0}, {0x00, 0x7C}, {0x00, 0x7C}, {0x1F, 0xF0}, {0x1F, 0xF0}, {0x1F, 0x80}, {0x00, 0x00}, }, // 'V'
    { {0x1F, 0xFC}, {0x00, 0x0C}, {0x07, 0xF0}, {0x00, 0x0C}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x1F, 0xF0}, {0x00, 0x00}, }, // 'W'
    { {0x18, 0x0C}, {0x1F, 0x7C}, {0x07, 0xF0}, {0x07, 0xF0}, {0x1F, 0x7C}, {0x1F, 0x7C}, {0x18, 0x0C}, {0x00, 0x00}, }, // 'X'
    { {0x1F, 0x00}, {0x1F, 0x80}, {0x00, 0xFC}, {0x00, 0xFC}, {0x1F, 0x80}, {0x1F, 0x80}, {0x1F, 0x00}, {0x00, 0x00}, }, // 'Y'
    { {0x1E, 0x04}, {0x1F, 0x04}, {0x11, 0x84}, {0x10, 0xC4}, {0x10, 0x7C}, {0x10, 0x7C}, {0x10, 0x3C}, {0x00, 0x00}, }, // 'Z'
    { {0x10, 0x04}, {0x10, 0x04}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x00, 0x00}, {0x00, 0x00}, {0x00, 0x00}, {0x00, 0x00}, }, // '['
    { {0x00, 0x00}, {0x00, 0x3C}, {0x01, 0xFC}, {0x1F, 0xC0}, {0x1E, 0x00}, {0x1E, 0x00}, {0x00, 0x00}, {0x00, 0x00}, }, // '\'
    { {0x00, 0x00}, {0x00, 0x00}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x10, 0x04}, {0x10, 0x04}, {0x10, 0x04}, {0x00, 0x00}, }, // ']'
    { {0x06, 0x00}, {0x0C, 0x00}, {0x18, 0x00}, {0x18, 0x00}, {0x0C, 0x00}, {0x0C, 0x00}, {0x06, 0x00}, {0x00, 0x00}, }, // '^'
    { {0x00, 0x01}, {0x00, 0x01}, {0x00, 0x01}, {0x00, 0x01}, {0x00, 0x01}, {0x00, 0x01}, {0x00, 0x01}, {0x00, 0x00}, }, // '_'
    { {0x00, 0x00}, {0x00, 0x00}, {0x00, 0x00}, {0x08, 0x00}, {0x18, 0x00}, {0x18, 0x00}, {0x10, 0x00}, {0x00, 0x00}, }, // '`'
    { {0x03, 0xFC}, {0x07, 0xFC}, {0x04, 0x44}, {0x04, 0x44}, {0x06, 0x7C}, {0x06, 0x7C}, {0x02, 0x30}, {0x00, 0x00}, }, // 'a'
    { {0x03, 0xF8}, {0x07, 0xFC}, {0x04, 0x04}, {0x04, 0x04}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x00, 0x00}, }, // 'b'
    { {0x01, 0xB0}, {0x07, 0xBC}, {0x04, 0x04}, {0x04, 0x04}, {0x07, 0xFC}, {0x07, 0xFC}, {0x03, 0xF0}, {0x00, 0x00}, }, // 'c'
    { {0x1F, 0xFC}, {0x1F, 0xFC}, {0x04, 0x04}, {0x04, 0x04}, {0x07, 0xFC}, {0x07, 0xFC}, {0x03, 0xF8}, {0x00, 0x00}, }, // 'd'
    { {0x03, 0xC8}, {0x07, 0xCC}, {0x04, 0x44}, {0x04, 0x44}, {0x07, 0xFC}, {0x07, 0xFC}, {0x03, 0xF8}, {0x00, 0x00}, }, // 'e'
    { {0x11, 0x00}, {0x11, 0x00}, {0x1F, 0xFC}, {0x0F, 0xFC}, {0x01, 0x00}, {0x01, 0x00}, {0x01, 0x00}, {0x00, 0x00}, }, // 'f'
    { {0x07, 0xFF}, {0x07, 0xFF}, {0x04, 0x04}, {0x04, 0x04}, {0x07, 0xFD}, {0x07, 0xFD}, {0x03, 0xF9}, {0x00, 0x00}, }, // 'g'
    { {0x03, 0xFC}, {0x07, 0xFC}, {0x04, 0x00}, {0x04, 0x00}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x00, 0x00}, }, // 'h'
    { {0x00, 0x08}, {0x00, 0x08}, {0x6F, 0xF8}, {0x6F, 0xF8}, {0x08, 0x08}, {0x08, 0x08}, {0x08, 0x08}, {0x00, 0x00}, }, // 'i'
    { {0x6F, 0xFE}, {0x6F, 0xFF}, {0x08, 0x00}, {0x08, 0x00}, {0x00, 0x03}, {0x00, 0x03}, {0x00, 0x02}, {0x00, 0x00}, }, // 'j'
    { {0x06, 0x0C}, {0x07, 0xBC}, {0x01, 0xF0}, {0x00, 0x40}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x00, 0x00}, }, // 'k'
    { {0x00, 0x04}, {0x00, 0x04}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x10, 0x04}, {0x10, 0x04}, {0x10, 0x04}, {0x00, 0x00}, }, // 'l'
    { {0x07, 0xFC}, {0x06, 0x00}, {0x03, 0xF8}, {0x06, 0x00}, {0x07, 0xFC}, {0x07, 0xFC}, {0x07, 0xFC}, {0x00, 0x00}, }, // 'm'
    { {0x03, 0xFC}, {0x07, 0xFC}, {0x04, 0x00}, {0x04, 0x00}, {0x07, 0xFC}, {0x07, 0xFC}, {0x07, 0xFC}, {0x00, 0x00}, }, // 'n'
    { {0x03, 0xF8}, {0x07, 0xFC}, {0x04, 0x04}, {0x04, 0x04}, {0x07, 0xFC}, {0x07, 0xFC}, {0x03, 0xF8}, {0x00, 0x00}, }, // 'o'
    { {0x03, 0xF8}, {0x07, 0xFC}, {0x04, 0x04}, {0x04, 0x04}, {0x07, 0xFF}, {0x07, 0xFF}, {0x07, 0xFF}, {0x00, 0x00}, }, // 'p'
    { {0x07, 0xFF}, {0x07, 0xFF}, {0x04, 0x04}, {0x04, 0x04}, {0x07, 0xFC}, {0x07, 0xFC}, {0x03, 0xF8}, {0x00, 0x00}, }, // 'q'
    { {0x03, 0x00}, {0x07, 0x00}, {0x04, 0x00}, {0x04, 0x00}, {0x07, 0xFC}, {0x07, 0xFC}, {0x07, 0xFC}, {0x00, 0x00}, }, // 'r'
    { {0x02, 0x30}, {0x06, 0x7C}, {0x04, 0x44}, {0x04, 0x44}, {0x07, 0xCC}, {0x07, 0xCC}, {0x01, 0x88}, {0x00, 0x00}, }, // 's'
    { {0x04, 0x04}, {0x04, 0x04}, {0x1F, 0xFC}, {0x1F, 0xF8}, {0x04, 0x00}, {0x04, 0x00}, {0x04, 0x00}, {0x00, 0x00}, }, // 't'
    { {0x07, 0xFC}, {0x07, 0xFC}, {0x00, 0x04}, {0x00, 0x04}, {0x07, 0xFC}, {0x07, 0xFC}, {0x07, 0xF8}, {0x00, 0x00}, }, // 'u'
    { {0x07, 0x80}, {0x07, 0xE0}, {0x00, 0x7C}, {0x00, 0x7C}, {0x07, 0xE0}, {0x07, 0xE0}, {0x07, 0x80}, {0x00, 0x00}, }, // 'v'
    { {0x07, 0xFC}, {0x00, 0x0C}, {0x03, 0xF0}, {0x00, 0x0C}, {0x07, 0xFC}, {0x07, 0xFC}, {0x07, 0xF0}, {0x00, 0x00}, }, // 'w'
    { {0x06, 0x0C}, {0x07, 0xBC}, {0x01, 0xF0}, {0x01, 0xF0}, {0x07, 0xBC}, {0x07, 0xBC}, {0x06, 0x0C}, {0x00, 0x00}, }, // 'x'
    { {0x07, 0xFF}, {0x07, 0xFF}, {0x00, 0x04}, {0x00, 0x04}, {0x07, 0xFD}, {0x07, 0xFD}, {0x07, 0xF9}, {0x00, 0x00}, }, // 'y'
    { {0x06, 0x04}, {0x07, 0x84}, {0x04, 0xC4}, {0x04, 0x64}, {0x04, 0x3C}, {0x04, 0x3C}, {0x04, 0x0C}, {0x00, 0x00}, }, // 'z'
    { {0x10, 0x04}, {0x10, 0x04}, {0x1F, 0x7C}, {0x0F, 0xF8}, {0x00, 0x80}, {0x00, 0x80}, {0x00, 0x00}, {0x00, 0x00}, }, // '{'
    { {0x00, 0x00}, {0x00, 0x00}, {0x1F, 0xFC}, {0x1F, 0xFC}, {0x00, 0x00}, {0x00, 0x00}, {0x00, 0x00}, {0x00, 0x00}, }, // '|'
    { {0x00, 0x00}, {0x00, 0x80}, {0x0F, 0xF8}, {0x1F, 0x7C}, {0x10, 0x04}, {0x10, 0x04}, {0x10, 0x04}, {0x00, 0x00}, }, // '}'
    { {0x00, 0xC0}, {0x00, 0x40}, {0x00, 0xC0}, {0x00, 0x80}, {0x00, 0xC0}, {0x00, 0xC0}, {0x00, 0x40}, {0x00, 0x00}, }, // '~'
}; 

void hText(Plot *p, char *text, int x_p, int pos, int y_p) {
    if(!text) { return; }
    for(int w = 0; w < strlen(text); w++) {
        for(int h = 0; h < 16; h++) {
            p->canvas[y_p + h][x_p + w] |= hfont[*(text + w) - 32][h] >> pos;
            if(w != 0) {
                p->canvas[y_p + h][x_p + w] |= hfont[*(text + w - 1) - 32][h] << (8 - pos);
            }
        }
    }
    for(int h = 0; h < 16; h++) {
        p->canvas[y_p + h][x_p + strlen(text)] |= hfont[*(text + strlen(text) - 1) - 32][h] << (8 - pos);
    }
}

void vText(Plot *p, char *text, int x_p, int pos, int y_p) {
    if(!text) { return; }
    int size = strlen(text);
    for(int h = 1; h <= size; h++) {
        for(int c = 0; c < 8; c++) {
            p->canvas[y_p + h * 8 + c][x_p] |= vfont[*(text + size - h) - 32][c][0] >> pos;
            p->canvas[y_p + h * 8 + c][x_p + 1] |= vfont[*(text + size - h) - 32][c][0] << (8 - pos);
            p->canvas[y_p + h * 8 + c][x_p + 1] |= vfont[*(text + size - h) - 32][c][1] >> pos;
            p->canvas[y_p + h * 8 + c][x_p + 2] |= vfont[*(text + size - h) - 32][c][1] << (8 - pos);
        }
    }
}

#endif
